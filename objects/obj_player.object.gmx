<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
Direction = 0;
direction = 180;
pitch = 0;
X = 4;
x = X/(3/32);
Y = 4.2;
Z = 12;
y = Z/(3/32);
z = Z;
RiftGame_SetCamera(obj_riftgame, id);

LastX = x;
LastY = y;

Yaw = 0;
Pitch = 0;
Roll = 0;

if (!global.IsRiftInitialized)
    {
    x = 4;
    X = 4;
    y = 12;
    Y = 12;
    z = 4.2;
    Z = 4.2;
    direction = 90;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.IsRiftInitialized)
    {
    if( Window_IsInForeground() &amp;&amp; window_has_focus() )
        {
        global.MouseX = window_mouse_get_x() - (view_xport[0] + view_wview[0]/2);
        global.MouseY = window_mouse_get_y()  - (view_yport[0] + view_hview[0]/2);
        window_mouse_set(view_xport[0] + view_wview[0]/2, view_yport[0] + view_hview[0]/2);
    
        //Window_LockCursor( window_get_x(), window_get_y(), window_get_width(), window_get_height() );
        window_set_cursor(cr_none);
        }
    
    X = x*(3/32);
    Z = y*(3/32);
    pitch += (global.MouseY/15);
    direction -= (global.MouseX/15);
    Yaw = degtorad(-direction+2*pi);
    Pitch = degtorad(-pitch);
    }
else
    {
    X = x;
    Y = y;
    
    global.MouseX = window_mouse_get_x() - (view_xport[0] + view_wview[0]/2);
    global.MouseY = window_mouse_get_y()  - (view_yport[0] + view_hview[0]/2);
    window_mouse_set(view_xport[0] + view_wview[0]/2, view_yport[0] + view_hview[0]/2);

    //Window_LockCursor( window_get_x(), window_get_y(), window_get_width(), window_get_height() );
    window_set_cursor(cr_none);
    
    direction -= global.MouseX/15;
    pitch += global.MouseY/15;
    Yaw = degtorad(-direction+2*pi);
    Pitch = degtorad(-pitch);
    }
    
move_keyboardcontrol();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.IsRiftInitialized) 
    {
    //my_matrix = matrix_build(0, 0, 0, 90, 0, 0, 1, 1, 1);
    //matrix_set(matrix_world, my_matrix);

    d3d_set_projection_ext(X, Y, Z, X + cos(Yaw), Y + sin(Yaw), Z + sin(Pitch), 0, 0, 1, 80, view_wview[0] / view_hview[0], 0.01, 600);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction+=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction-=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Direction = 0;
direction = 180;
Yaw = 0;
X = 4;
x = X/(3/32);
Y = 3.9;
Z = 12;
y = Z/(3/32);

LastX = x;
LastY = y;

Yaw = 0;
Pitch = 0;
Roll = 0;
Rift_Center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
