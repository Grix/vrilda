<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>templist = ds_list_create();

scan_list = ds_list_create();
ds_list_add(scan_list,0);
ds_list_add(scan_list,0);


// Initialize GMOculus
GMO_init(); 
//RF_init(working_directory+"\lib\ReadFile2.dll");

//FPSController_create();
// Preload lights
//initLights();

alarm[1]=2;

frame = 0;
rdy = 0;
rwidth = 0;
rheight = 900;
rlength = 0;
play = 0;
audio = "song";
songloaded = 0;
fpswarning = 0;
needpal = 0;
progress = 0;
i = 0;
icp = 0;
file_size = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (frame &lt; ds_list_size(ild_list)-6)
    frame++;
else
    play = 0;
if (play)
    alarm[3]=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (frame &lt; ds_list_size(ild_list)-6)
    frame++;
else
    play = 0;
if (play)
    alarm[4]=4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!(read_ilda_work()))
    alarm[2]=1;
else
    {
    rdy = 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
rdy = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fpswarning = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//FPSController_step();
if (rdy)
    {
    if (rdy and play and songloaded and (((real(saud_position(audio))/1000*30 - frame) &gt; 5 or (real(saud_position(audio))/1000*30 - frame) &lt; -5))) 
        frame = floor(real(saud_position(audio))/1000*30);
    
    if (rheight &lt; 100)
        rheight = 100;
    if (rwidth &lt; 200)
        rwidth = 200;
    if (rlength &lt; 200)
        rlength = 200;
    
    if (keyboard_check(vk_right))
        {
        if (frame &lt; ds_list_size(ild_list)-6) frame++; //read_frame();
        }
    if (keyboard_check(vk_left))
        {
        if (frame) frame--; //read_frame();
        }
    
    if (keyboard_check_pressed(vk_tab))
        {
        if (ds_list_find_value(scan_list,0))
            {
            if (!room) room_goto_next(); 
            else room_goto_previous();
            }
        else show_message("Please load at least a main ILDA file before entering 3D mode");
        }
        
    if (keyboard_check_pressed(vk_space))
        {
        if (saud_is_playing(audio))
            {
            saud_stop(audio);
            }
        else
            {
            saud_seek(floor(frame*1000/30),audio);
            }
        play = !play;
        if (play)
            alarm[3]=1;
        }
    if (keyboard_check_pressed(vk_backspace))
        {
        frame = 0;
        //read_frame();
        saud_stop(audio);
        play = 0;
        }
        
 /*   if (play == 1 and (frame &lt; ds_list_size(ild_list)-5) and alarm[3] != 0 and alarm[4] != 0)
        { 
        alarm[3]=1;
        //read_frame();
        }*/
            
    if (keyboard_check_pressed(ord('M')))
        {
        seekto = get_integer("Enter frame number to skip to, 0 to "+string(ds_list_size(ild_list)-6),0);
        saud_stop(audio);
        play = 0;
        frame = seekto;
        if (room)
            window_set_fullscreen(1);
        //read_frame();
        }
    
    if (keyboard_check_pressed(ord('N')))
        {
        if (ds_list_find_index(scan_list,0) == 1)
            {
            saud_stop(audio);
            play = 0;
            //new_scanner = instance_create(1600,1250,obj_scanner);
            //new_scanner.scanner = ds_list_find_index(scan_list,0);
            if (!read_ilda_init(1))
                show_message("Error loading ILDA file");
            else if (room)
                {
                instance_create(obj_scanner.x-300,room_height/2,obj_flankscanner);
                instance_create(obj_scanner.x+300,room_height/2,obj_flankscanner1);
                window_set_fullscreen(1);
                obj_scanner.dirver = 2.1;
                }
            }
        else
            {
            ds_list_replace(scan_list,1,0);
            ds_list_replace(scan_list,2,0);
            with (obj_flankscanner) instance_destroy();
            with (obj_flankscanner1) instance_destroy();
            }
        }
        
        
    if (room)
        {
        
        if (rdy and play and fps &gt; 73)
            {
            fpswarning = 1;
            alarm[0] = 2000;
            }
        }
        
    }
    
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room)
    {
    //Start our 3D engine
    init3D();
    instance_create(750,room_height/2,obj_scanner);
    if (ds_list_find_value(scan_list,1))
        {
        instance_create(obj_scanner.x-300,room_height/2,obj_flankscanner);
        instance_create(obj_scanner.x+300,room_height/2,obj_flankscanner1);
        }
    window_set_cursor(cr_none);
    }
else
    {
    end3D();
    window_set_cursor(cr_default);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_info);
if (rdy)
    {
    draw_set_font(fnt_info);
    //list_id = frame_list;
    ild_list = ds_list_find_value(scan_list,0);
    list_id = ds_list_find_value(ild_list,frame);
    if (room)
        {
        /// Draw some debugging text
        //draw_set_color(c_gray)
        draw_text_stroke(10,10,"Read the readme for controls and manual!##Name: "+string(ds_list_find_value(list_id,3))+
         "#Author: "+string(ds_list_find_value(list_id,4))+
         "#Number "+string(frame)+"/"+string(ds_list_size(ild_list)-6)+
         "#Time: "+time(frame)+" / "+time(ds_list_size(ild_list)-6)+
         "#Scanner: "+string(ds_list_find_value(list_id,1))+
         "#ILDA format: "+string(ds_list_find_value(list_id,2))+
         "##FPS: " + string(fps) +
         "#Resolution: " + string(GMO_getResolutionWidth()) + "x" + string(GMO_getResolutionHeight()) +
         "#XY: " + string(obj_camera.x) + "x" + string(obj_camera.y) +
         "#Interpupillary Distance" + string(GMO_getIPD()));
         if (fpswarning) 
            {
            draw_set_color(c_red);
            draw_set_font(fnt_parsing);
            draw_text(10,220,"Warning:#FPS has dropped lower than 75,#this can cause playback skipping");
            draw_set_font(fnt_info);
            draw_set_color(c_ltgray);
            }
        
        
        // Change IPD
        if (keyboard_check_direct(ord("L"))) {
            GMO_setIPD(GMO_getIPD()+0.01);
        }
        if (keyboard_check_direct(ord("K"))) {
            GMO_setIPD(GMO_getIPD()-0.01);
        }
        }
    else
        {
        draw_set_color(c_dkgray);
        draw_line(802,15,802,585);
        draw_set_color(c_ltgray);
        draw_text_stroke(830,30,"Read the readme for controls and manual!##Name: "+string(ds_list_find_value(list_id,3))+
        "#Author: "+string(ds_list_find_value(list_id,4))+
        "#Number "+string(frame)+"/"+string(ds_list_size(ild_list)-6)+
        "#Time: "+time(frame)+" / "+time(ds_list_size(ild_list)-6)+
        "#Scanner: "+string(ds_list_find_value(list_id,1))+
        "#ILDA format: "+string(ds_list_find_value(list_id,2)));
        
        if (!global._GMO_DLL_LOADED) 
            {
            draw_set_color(c_red);
            draw_set_font(fnt_parsing);
            draw_text(830,220,"Warning:#Oculus Rift Not Detected");
            draw_set_font(fnt_info);
            draw_set_color(c_ltgray);
            }
        
        }
    }
else
    {
    if (file_size &gt; 0)
        {
        draw_set_color(c_ltgray);
        draw_set_font(fnt_parsing);
        draw_text(20,20,"Parsing file: "+string(floor(icp/1028))+"/"+string(floor(file_size/1028))+" kB, "+string(floor(icp/file_size*100))+"%");
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!room and rdy)
    {
    /*i = 0;
    while (i&lt;=ds_list_size(scan_list))
        {
        if (ds_list_find_value(scan_list,i))
            draw_frame_2d(i);
        i++;
        }*/
    draw_clear(c_black);
    draw_frame_2d(0);
    if (ds_list_find_index(scan_list,0) != 1)
        draw_frame_2d(1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
